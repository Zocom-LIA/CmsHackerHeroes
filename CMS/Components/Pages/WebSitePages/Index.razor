@page "/websites"
@attribute [Authorize]

@using Microsoft.AspNetCore.Components.QuickGrid
@using CMS.Data

@inject IGetCurrentUserService GetCurrentUserService
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

@implements IAsyncDisposable

<PageTitle>Mina webbsites</PageTitle>

<h3>Mina websites</h3>

<p>
    <a href="websites/create">Skapa ny webbsite</a>
</p>
@if (UserId != null)
{
    <div class="grid-container" style="display: grid;"> 
    @foreach (var website in context.WebSites.Where(w => w.UserId == UserId))
    {
        <div class="grid-item" >
    
            @if (website.ImageUrl != null)
            {
                <img src="@website.ImageUrl" alt=""
                     style="object-fit:contain;width: 100%;height: 50%;"/>
               
            }
            else
            {
                <img src="https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.webp" alt=""
                     style="object-fit:contain;width: 100%;height: 50%;"/>
           
            }
             <h3> @website.Title</h3>
             <p style="font-size: small"> Beskrivning: @website.Description</p>
            <p style="font-size: small"> Skapad: @website.CreationDate</p>

@*             <button @onclick="@(() => NavigationManager.NavigateTo($"websites/edit?websiteid={website.WebSiteId}"))">Editera</button>
            <button @onclick="@(() => NavigationManager.NavigateTo($"websites/details?websiteid={website.WebSiteId}"))">Detaljer</button>
            <button @onclick="@(() => NavigationManager.NavigateTo($"/webpages/create?websiteid={website.WebSiteId}"))">Lägg till websida</button>
            <button @onclick="@(() => NavigationManager.NavigateTo($"websites/delete?websiteid={website.WebSiteId}"))">Radera</button>
            <br /> *@

            <a href="@($"websites/edit?websiteid={website.WebSiteId}")">Redigera</a> |
            <a href="@($"websites/details?websiteid={website.WebSiteId}")">Detaljer</a> |
            <a href="@($"/webpages/create?websiteid={website.WebSiteId}")">Lägg till websida</a> |
            <a href="@($"websites/delete?websiteid={website.WebSiteId}")">Radera</a> 
        </div>
    }
    </div>

    <!--
<QuickGrid Class="table" Items="context.WebSites.Where(w => w.UserId == UserId)">
        <PropertyColumn Property="website => website.Title"/>
        <PropertyColumn Property="website => website.Description"/>
        <PropertyColumn Property="website => website.CreationDate"/>
        <PropertyColumn Property="website => website.LastUpdated"/>


        <TemplateColumn Context="website">
            <a href="@($"websites/edit?websiteid={website.WebSiteId}")">Edit</a> |
            <a href="@($"websites/details?websiteid={website.WebSiteId}")">Details</a> |
            <a href="@($"websites/delete?websiteid={website.WebSiteId}")">Delete</a> |
            <a href="@($"/webpages?websiteid={website.WebSiteId}")">Show Web Pages</a> |
            <a href="@($"/webpages/create?websiteid={website.WebSiteId}")">Add Page</a>
        </TemplateColumn>
    </QuickGrid> -->
}

    
@code {

    public string UserId { get; set; }

    ApplicationDbContext context = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await GetCurrentUserService.GetCurrentUserAsync();
        if (user != null)
        {
            UserId = user.Id;
        }

        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync()
    {
        await context.DisposeAsync();
    }

}