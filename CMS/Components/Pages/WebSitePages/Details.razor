@page "/websites/details"
@using CMS.Entities
@using CMS.Services
@inject IDbContextFactory<CMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject VisitorCounterService VisitorCounterService

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>WebSite</h4>
    <hr />
    @if (website is null)
    {
    <p><em>Loading...</em></p>
    }
    else
    {
    <dl class="row">
        <dt class="col-sm-2">Title</dt>
        <dd class="col-sm-10">@website.Title</dd>
        <dt class="col-sm-2">Description</dt>
        <dd class="col-sm-10">@website.Description</dd>
        <dt class="col-sm-2">CreationDate</dt>
        <dd class="col-sm-10">@website.CreationDate</dd>
        <dt class="col-sm-2">LastUpdated</dt>
        <dd class="col-sm-10">@website.LastUpdated</dd>
        <dt class="col-sm-2">UserId</dt>
        <dd class="col-sm-10">@website.UserId</dd>
    </dl>

    <p>This page has been visited @VisitCount times.</p>
    
    <div>
        <a href="@($"/websites/edit?websiteid={website.WebSiteId}")">Edit</a> |
        <a href="@($"/webpages?websiteid={website.WebSiteId}")">Web Pages</a> |
        <a href="@($"/websites")">Back to List</a>
    </div>
    
    }
</div>

<ConnectedWebPagesInfo WebSiteId="@WebSiteId" />

@code {
    WebSite? website;
    private int VisitCount { get; set; }
    private string CurrentPageUrl => NavigationManager.Uri;

    [SupplyParameterFromQuery]
    public int WebSiteId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        website = await context.WebSites.FirstOrDefaultAsync(m => m.WebSiteId == WebSiteId);

        if (website is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
        else
        {
            // Increment the visit count for this specific page
            await VisitorCounterService.IncrementPageVisitAsync(WebSiteId, CurrentPageUrl);

            // Get the updated visit count for this page
            VisitCount = await VisitorCounterService.GetPageVisitCountAsync(WebSiteId, CurrentPageUrl);
        }
    }
}

